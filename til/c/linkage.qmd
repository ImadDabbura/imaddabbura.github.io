---
title: "Linkage in C"
date: 2023-10-03
categories: C
---
Within a translation unit, all declarations of the same object or function identifier
with **internal linkage** refer to the same thing, and the object or function is **unique** to that
translation unit. All declarations for the same object or function identifier with **external
linkage** refer to the same thing, and the object or function is **shared** by the entire program.

The first external declaration for an identifier gives the identifier
internal linkage if the **static** specifier is used, external linkage otherwise. If a
declaration for an identifier within a block does not include the extern specifier, then
the identifier has no linkage and is unique to the function. If it does include extern,
and an external declaration for the identifier is active in the scope surrounding the block,
then the identifier has the same linkage as the external declaration, and refers to the
same object or function; but if no external declaration is visible, its linkage is external.
